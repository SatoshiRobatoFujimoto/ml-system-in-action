FROM continuumio/miniconda:latest as builder

ENV PROJECT_DIR serving_patterns
WORKDIR /${PROJECT_DIR}
ADD requirements/requirements_pytorch.txt /${PROJECT_DIR}/
ADD requirements/conda_pytorch.yaml /${PROJECT_DIR}/
RUN apt-get -y update && \
    apt-get -y install apt-utils gcc curl && \
    conda update -n base -c defaults conda && \
    conda env update -f conda_pytorch.yaml && \
    conda install pytorch torchvision cpuonly -c pytorch && \
    conda clean -y --all && \
    pip install  --no-cache-dir -r requirements_pytorch.txt
 
COPY ./src/ /${PROJECT_DIR}/src/
COPY ./src/app/ml/resnet50_onnx/run_extract_resnet50_onnx.sh /${PROJECT_DIR}/run_extract_resnet50_onnx.sh

RUN chmod +x run_extract_resnet50_onnx.sh && \
    ./run_extract_resnet50_onnx.sh


FROM python:3.8.5-slim

ENV PROJECT_DIR serving_patterns
WORKDIR /${PROJECT_DIR}
ADD requirements/requirements_flask.txt /${PROJECT_DIR}/
RUN apt-get -y update && \
    apt-get -y install apt-utils gcc && \
    pip install --no-cache-dir -r requirements_flask.txt

COPY ./src/ /${PROJECT_DIR}/src/
COPY ./logging/ /${PROJECT_DIR}/logging/
COPY --from=builder /${PROJECT_DIR}/src/app/ml/resnet50_onnx/ /${PROJECT_DIR}/src/app/ml/resnet50_onnx/

COPY ./scripts/run_api.sh /${PROJECT_DIR}/run_api.sh
RUN chmod +x run_api.sh
CMD ./run_api.sh