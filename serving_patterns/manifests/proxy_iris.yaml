apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-iris-proxy
  labels:
    app: api-iris-proxy
  namespace: serving-pattern
spec:
  selector:
    matchLabels:
      app: api-iris-proxy
  replicas: 6
  template:
    metadata:
      labels:
        app: api-iris-proxy
      name: api-iris-proxy
    spec:
      containers:
      - name: api-iris-proxy
        image: gcr.io/newagent-16e99/github.com/shibuiwilliam/ml-system-in-action/serving_patterns_proxy:latest
        command: ["./run_proxy.sh"]
        env:
        - name: PLATFORM
          value: kubernetes
        - name: CACHE_HOST
          value: redis.serving-pattern.svc.cluster.local
        - name: GUNICORN_UVICORN
          value: GUNICORN
        - name: WORKERS
          value: "2"
        - name: APP_NAME
          value: "src.api_composition_proxy.apps.proxy:app"
        - name: PORT
          value: "8000"
        - name: PROFILE
          value: "0"
        - name: QUEUE_NAME
          value: tree_api_queue
        - name: SERVICE_WEB_SINGLE
          value: api-iris-web-single.serving-pattern.svc.cluster.local:8888
        - name: SERVICE_SYNCHRONOUS
          value: api-iris-synchronous.serving-pattern.svc.cluster.local:8889
        - name: SERVICE_ASYNCHRONOUS
          value: api-iris-asynchronous.serving-pattern.svc.cluster.local:8890
        - name: CUSTOMIZED_REDIRECT_MAP
          value: '{"SERVICE_WEB_SINGLE":{"predict":"predict/label"},"SERVICE_SYNCHRONOUS":{"predict":"predict/label"},"SERVICE_ASYNCHRONOUS":{"predict/label":"predict"}}'
        resources:
          limits:
            cpu: "0.5"
            memory: "500Mi"
          requests:
            cpu: "0.5"
            memory: "500Mi"
        ports:
        - containerPort: 8000

---

apiVersion: v1
kind: Service
metadata:
  name: api-iris-proxy
  labels:
    app: api-iris-proxy
  namespace: serving-pattern
spec:
  ports:
  - port: 8000
    protocol: TCP
  selector:
    app: api-iris-proxy
