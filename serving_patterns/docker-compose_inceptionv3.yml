version: '3'

services:
  prep_pred_api:
    container_name: serving_patterns_inceptionv3_api
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile_api_inceptionv3
    environment:
      - PLATFORM=docker_compose
      - MODEL_INTERFACE=inceptionv3.yaml
      - GUNICORN_UVICORN=GUNICORN
      - WORKERS=4
      - APP_NAME=app.apps.app_image:app
      - PORT=8892
      - TFS_GRPC=prep_pred_tfs:8500
      - PROFILE=0
      - QUEUE_NAME=tfs_queue
    ports:
      - "8892:8892"
    command: ./run_api.sh
    volumes:
      - shared_volume:/shared_volume
    depends_on:
      - redis
      - prep_pred_tfs
      - tfs_backend

  prep_pred_tfs:
    container_name: serving_patterns_inceptionv3_tfs
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile_tfserving_inceptionv3
    environment:
      - PORT=8500
      - REST_API_PORT=8501
      - MODEL_NAME=inceptionv3
      - MODEL_BASE_PATH=/models/inceptionv3
    ports:
      - "8500:8500"
      - "8501:8501"
    entrypoint: ["/usr/bin/tf_serving_entrypoint.sh"]

  tfs_backend:
    container_name: serving_patterns_tfs_backend
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile_backend_inceptionv3
    environment:
      - PLATFORM=docker_compose
      - MODEL_INTERFACE=inceptionv3.yaml
      - NUM_PROCS=4
      - BATCH_CODE=app.backend.prediction_batch
      - TFS_GRPC=prep_pred_tfs:8500
      - PROFILE=0
      - PREDICTOR=app.api._predict_image
      - QUEUE_NAME=tfs_queue
    command: ./run_backend.sh
    volumes:
      - shared_volume:/shared_volume
    depends_on:
      - redis

  redis:
    container_name: serving_patterns_redis
    image: "redis:latest"
    ports:
      - "6379:6379"

volumes:
  shared_volume:
    driver_opts:
      type: none
      device: /tmp
      o: bind
